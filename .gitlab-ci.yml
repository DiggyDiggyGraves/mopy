include:
  - template: Security/SAST.gitlab-ci.yml

stages:
  - test
  - docker

sast:
  stage: test

docker:
  stage: docker
  image:
    name: moby/buildkit:latest
    entrypoint: [ "sh", "-c" ]
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  needs: [ ]
  dependencies: [ ]
  variables:
    GITLAB_RELEASE: $CI_REGISTRY_IMAGE:v1
    GITLAB_LATEST: $CI_REGISTRY_IMAGE:latest
    CACHE_IMAGE: $CI_REGISTRY_IMAGE/cache
    DOCKER_HUB_AUTH_URL: https://index.docker.io/v1/
    DOCKER_HUB_RELEASE: cmdjulian/pydockerfile:v1
    DOCKER_HUB_LATEST: cmdjulian/pydockerfile:latest
    PLATFORMS: linux/amd64,linux/arm64,linux/arm/v7
  before_script:
    - apk add --no-cache jq moreutils
    - mkdir ~/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"auth\":\"$(echo -n ${CI_REGISTRY_USER}:${CI_REGISTRY_PASSWORD} | base64)\"}}}"
      > ~/.docker/config.json
    - >-
      cat ~/.docker/config.json |
      jq ".auths += {\"$DOCKER_HUB_AUTH_URL\": {
        auth: \"$(echo -n "$DOCKER_HUB_USER:$DOCKER_HUB_PASSWORD" | base64)\"
      }}" | sponge ~/.docker/config.json
  script: >-
    buildctl-daemonless.sh build
    --frontend=dockerfile.v0
    --local context=.
    --local dockerfile=.
    --export-cache type=registry,mode=max,ref=$CACHE_IMAGE
    --import-cache type=registry,ref=$CACHE_IMAGE
    --opt platform="$PLATFORMS"
    --output type=image,\"name=$GITLAB_RELEASE,$GITLAB_LATEST,$DOCKER_HUB_RELEASE,$DOCKER_HUB_LATEST\",push=true