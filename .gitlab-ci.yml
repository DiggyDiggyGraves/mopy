# https://gitlab.com/cmdjulian/pydockerfile/-/ci/lint

include:
  - template: Security/SAST.gitlab-ci.yml

stages: [ test, docker ]


sast:
  stage: test


docker:
  stage: docker
  image: docker:20
  rules: [ { if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE != "schedule" } ]
  needs: [ ]
  dependencies: [ ]
  services:
    - name: docker:20-dind
      command: [ --experimental ]
  variables:
    DOCKER_DRIVER: overlay2
    BUILDX_VERSION: v0.8.2
    BUILDX_ARCH: linux-amd64
    DOCKER_BUILDKIT: "1"
    DOCKER_CONTENT_TRUST: "1"
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login $CI_REGISTRY --username $CI_REGISTRY_USER --password-stdin
    - echo "$DOCKER_HUB_PASSWORD" | docker login --username $DOCKER_HUB_USER --password-stdin
    - mkdir -p $HOME/.docker
    - "echo -e '{\n  \"experimental\": \"enabled\"\n}' | tee $HOME/.docker/config.json"
    - docker version
    - wget -O /usr/bin/docker-buildx
      https://github.com/docker/buildx/releases/download/${BUILDX_VERSION}/buildx-${BUILDX_VERSION}.${BUILDX_ARCH}
    - chmod +x /usr/bin/docker-buildx
    - docker-buildx create --use
  script: >-
    docker-buildx build
    --platform linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64/v8
    --squash
    --build-arg BUILDKIT_INLINE_CACHE=1
    --cache-from cmdjulian/pydockerfile:v1
    --tag $CI_REGISTRY_IMAGE:v1
    --tag $CI_REGISTRY_IMAGE:latest
    --tag cmdjulian/pydockerfile:v1
    --tag cmdjulian/pydockerfile:latest
    --push
    .